{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nimport { useRouter } from 'next/router';\nimport Layout from '../../components/MyLayout.js';\nimport fetch from 'isomorphic-unfetch';\n\nvar Post = function Post(props) {\n  return React.createElement(Layout, null, React.createElement(Movie, {\n    name: props.show.name,\n    summary: props.show.summary,\n    image: props.show.image && props.show.image.medium\n  }));\n};\n\nvar Movie = function Movie(_ref) {\n  var name = _ref.name,\n      summary = _ref.summary,\n      image = _ref.image;\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, name || \"NOT FOUND\"), React.createElement(\"p\", null, summary && summary.replace(/<[/]?p>/g, '')), React.createElement(\"img\", {\n    src: image\n  }));\n};\n\nPost.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var id, res, show;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = context.query.id;\n            _context.next = 3;\n            return fetch(\"https://api.tvmaze.com/shows/\".concat(id));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            show = _context.sent;\n            console.log(\"fetched show : \".concat(show.name));\n            return _context.abrupt(\"return\", {\n              show: show\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Post;","map":null,"metadata":{},"sourceType":"module"}